# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'C:\PycharmProjects\QT_Disigner\Vista_QT\book.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5.QtWidgets import QApplication, QMainWindow, QGridLayout, QWidget, QTableWidget, QTableWidgetItem
from PyQt5.QtCore import QSize, Qt
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox
from PyQt5.QtCore import Qt, pyqtSignal
mon = {1:'января', 2:'февраля', 3:'марта', 4:'апреля', 5:'мая', 6:'июня', 7:'июля', 8:'августа', 9:'сентября', 10:'октября', 11:'ноября', 12:'декабря'}
roww = None
ntdt = None



class NewAbon(QtWidgets.QDialog):
    def __init__(self, parent=None):
        super(NewAbon, self).__init__(parent)
        self.setWindowTitle("Добавить контакт")
        self.resize(353, 180)

        self.pushButton = QtWidgets.QPushButton(self)
        self.pushButton.setGeometry(QtCore.QRect(270, 140, 75, 23))
        self.pushButton.setObjectName("pushButton")
        self.pushButton.setText("Сохранить")
        self.pushButton.clicked.connect(self.btnClosed)

        self.lineEdit = QtWidgets.QLineEdit(self)
        self.lineEdit.setGeometry(QtCore.QRect(120, 30, 221, 20))
        self.lineEdit.setObjectName("lineEdit")

        self.lineEdit_2 = QtWidgets.QLineEdit(self)
        self.lineEdit_2.setGeometry(QtCore.QRect(120, 70, 221, 21))
        self.lineEdit_2.setObjectName("lineEdit_2")

        self.dateEdit = QtWidgets.QDateEdit(self)
        self.dateEdit.setGeometry(QtCore.QRect(120, 110, 221, 20))
        self.dateEdit.setObjectName("dateEdit")

        self.label = QtWidgets.QLabel(self)
        self.label.setGeometry(QtCore.QRect(80, 30, 31, 21))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())
        self.label.setSizePolicy(sizePolicy)
        self.label.setBaseSize(QtCore.QSize(0, 0))
        self.label.setFrameShadow(QtWidgets.QFrame.Raised)
        self.label.setTextFormat(QtCore.Qt.AutoText)
        self.label.setWordWrap(False)
        self.label.setObjectName("label")
        self.label.setText('Имя')

        self.label_2 = QtWidgets.QLabel(self)
        self.label_2.setGeometry(QtCore.QRect(60, 70, 51, 21))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_2.sizePolicy().hasHeightForWidth())
        self.label_2.setSizePolicy(sizePolicy)
        self.label_2.setBaseSize(QtCore.QSize(0, 0))
        self.label_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.label_2.setTextFormat(QtCore.Qt.AutoText)
        self.label_2.setWordWrap(False)
        self.label_2.setObjectName("label_2")
        self.label_2.setText("Телефон")

        self.label_3 = QtWidgets.QLabel(self)
        self.label_3.setGeometry(QtCore.QRect(20, 110, 81, 21))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_3.sizePolicy().hasHeightForWidth())
        self.label_3.setSizePolicy(sizePolicy)
        self.label_3.setBaseSize(QtCore.QSize(0, 0))
        self.label_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.label_3.setTextFormat(QtCore.Qt.AutoText)
        self.label_3.setWordWrap(False)
        self.label_3.setObjectName("label_3")
        self.label_3.setText("Дата рождения")

        self.pushButton = QtWidgets.QPushButton(self)
        self.pushButton.setGeometry(QtCore.QRect(270, 140, 75, 23))
        self.pushButton.setObjectName("pushButton")
        self.pushButton.setText("Сохранить")
        self.pushButton.clicked.connect(self.btnClosed)

    def btnClosed(self):
        import main
        import sql_req
        name = self.lineEdit.text()
        tel = self.lineEdit_2.text()
        date = self.dateEdit.text()
        n = sql_req.check_id(main.conn, name, tel, date)
        if len(n) > 0:
            msg = QMessageBox()
            msg.setWindowTitle(" ")
            msg.setText("Контакт уже существует.")
            msg.setIcon(QMessageBox.Warning)
            msg.exec_()
        else:
            sql_req.add_row(main.conn, name, tel, date)
            msg = QMessageBox()
            msg.setWindowTitle(" ")
            msg.setText("Контакт добавлен.")
            msg.setIcon(QMessageBox.Warning)
            msg.exec_()
            self.close()



class Redact(QtWidgets.QDialog):
    def __init__(self, parent=None):
        super(Redact, self).__init__(parent)
        self.setWindowTitle("Редактировать контакт")
        self.resize(353, 180)

        self.pushButton = QtWidgets.QPushButton(self)
        self.pushButton.setGeometry(QtCore.QRect(270, 140, 75, 23))
        self.pushButton.setObjectName("pushButton")
        self.pushButton.setText("Сохранить")
        self.pushButton.clicked.connect(self.btnClosed)

        self.lineEdit = QtWidgets.QLineEdit(self)
        self.lineEdit.setGeometry(QtCore.QRect(120, 30, 221, 20))
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit.setText(roww[0])

        self.lineEdit_2 = QtWidgets.QLineEdit(self)
        self.lineEdit_2.setGeometry(QtCore.QRect(120, 70, 221, 21))
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.lineEdit_2.setText(roww[1])

        self.dateEdit = QtWidgets.QDateEdit(self)
        self.dateEdit.setGeometry(QtCore.QRect(120, 110, 221, 20))
        self.dateEdit.setObjectName("dateEdit")
        date = self.data_trns()
        self.dateEdit.setDate(date)



        self.label = QtWidgets.QLabel(self)
        self.label.setGeometry(QtCore.QRect(80, 30, 31, 21))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())
        self.label.setSizePolicy(sizePolicy)
        self.label.setBaseSize(QtCore.QSize(0, 0))
        self.label.setFrameShadow(QtWidgets.QFrame.Raised)
        self.label.setTextFormat(QtCore.Qt.AutoText)
        self.label.setWordWrap(False)
        self.label.setObjectName("label")
        self.label.setText('Имя')

        self.label_2 = QtWidgets.QLabel(self)
        self.label_2.setGeometry(QtCore.QRect(60, 70, 51, 21))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_2.sizePolicy().hasHeightForWidth())
        self.label_2.setSizePolicy(sizePolicy)
        self.label_2.setBaseSize(QtCore.QSize(0, 0))
        self.label_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.label_2.setTextFormat(QtCore.Qt.AutoText)
        self.label_2.setWordWrap(False)
        self.label_2.setObjectName("label_2")
        self.label_2.setText("Телефон")

        self.label_3 = QtWidgets.QLabel(self)
        self.label_3.setGeometry(QtCore.QRect(20, 110, 81, 21))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_3.sizePolicy().hasHeightForWidth())
        self.label_3.setSizePolicy(sizePolicy)
        self.label_3.setBaseSize(QtCore.QSize(0, 0))
        self.label_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.label_3.setTextFormat(QtCore.Qt.AutoText)
        self.label_3.setWordWrap(False)
        self.label_3.setObjectName("label_3")
        self.label_3.setText("Дата рождения")

        self.pushButton = QtWidgets.QPushButton(self)
        self.pushButton.setGeometry(QtCore.QRect(270, 140, 75, 23))
        self.pushButton.setObjectName("pushButton")
        self.pushButton.setText("Сохранить")
        self.pushButton.clicked.connect(self.btnClosed)

        import sql_req
        import main
        self.name = self.lineEdit.text()
        self.tel = self.lineEdit_2.text()
        self.date = self.dateEdit.text()
        self.id = sql_req.check_id(main.conn, self.name, self.tel, self.date)

    def data_trns(self):
        date = roww[2].split(' ')
        for i in range(len(mon)):
            if mon[i+1] == date[1]:
                date.pop(1)
                date.insert(1, str(i+1))
        d = date[0]
        m = date[1]
        y = date[2]
        if len(m) == 1:
            m = '0'+ m
        date = [y, m, d]
        date = '-'.join(date)
        qtDate = QtCore.QDate.fromString(date, 'yyyy-MM-dd')
        #print(qtDate)
        return qtDate

    def btnClosed(self):
        import main
        import sql_req
        name = self.lineEdit.text()
        tel = self.lineEdit_2.text()
        date = self.dateEdit.text()
        data = [name, tel, date]
        sql_req.updade(main.conn, self.id, data)
        self.close()
        msg = QMessageBox()
        msg.setWindowTitle(" ")
        msg.setText("Контакт обновлен.")
        msg.setIcon(QMessageBox.Warning)
        msg.exec_()





class Ui_PhoneBook(object):
    def setupUi_phone_book(self, Ui_PhoneBook):
        Ui_PhoneBook.setObjectName("MainWindow")
        Ui_PhoneBook.resize(538, 406)
        self.centralwidget = QtWidgets.QWidget(Ui_PhoneBook)
        self.centralwidget.setObjectName("centralwidget")
        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget.setGeometry(QtCore.QRect(60, 20, 341, 361))
        self.tableWidget.setInputMethodHints(QtCore.Qt.ImhNone)
        self.tableWidget.setRowCount(15)
        self.tableWidget.setColumnCount(3)
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setHorizontalHeaderLabels(['Имя', 'Телефон', 'Дата рождения'])
        self.tableWidget.clicked.connect(self.clicked_table)

        # Кнопки
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(10, 40, 51, 23))
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.press_btn)

        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(10, 60, 51, 23))
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_2.clicked.connect(self.press_btn)

        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setGeometry(QtCore.QRect(10, 80, 51, 23))
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_3.clicked.connect(self.press_btn)

        self.pushButton_4 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_4.setGeometry(QtCore.QRect(10, 100, 51, 23))
        self.pushButton_4.setObjectName("pushButton_4")
        self.pushButton_4.clicked.connect(self.press_btn)

        self.pushButton_5 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_5.setGeometry(QtCore.QRect(10, 120, 51, 23))
        self.pushButton_5.setObjectName("pushButton_5")
        self.pushButton_5.clicked.connect(self.press_btn)

        self.pushButton_6 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_6.setGeometry(QtCore.QRect(10, 140, 51, 23))
        self.pushButton_6.setObjectName("pushButton_6")
        self.pushButton_6.clicked.connect(self.press_btn)

        self.pushButton_7 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_7.setGeometry(QtCore.QRect(10, 160, 51, 23))
        self.pushButton_7.setObjectName("pushButton_7")
        self.pushButton_7.clicked.connect(self.press_btn)

        self.pushButton_8 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_8.setGeometry(QtCore.QRect(10, 180, 51, 23))
        self.pushButton_8.setObjectName("pushButton_8")
        self.pushButton_8.clicked.connect(self.press_btn)

        self.pushButton_9 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_9.setGeometry(QtCore.QRect(10, 200, 51, 23))
        self.pushButton_9.setObjectName("pushButton_9")
        self.pushButton_9.clicked.connect(self.press_btn)

        self.pushButton_10 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_10.setGeometry(QtCore.QRect(10, 220, 51, 23))
        self.pushButton_10.setObjectName("pushButton_10")
        self.pushButton_10.clicked.connect(self.press_btn)

        self.pushButton_11 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_11.setGeometry(QtCore.QRect(10, 240, 51, 23))
        self.pushButton_11.setObjectName("pushButton_11")
        self.pushButton_11.clicked.connect(self.press_btn)

        self.pushButton_12 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_12.setGeometry(QtCore.QRect(10, 260, 51, 23))
        self.pushButton_12.setObjectName("pushButton_12")
        self.pushButton_12.clicked.connect(self.press_btn)

        self.pushButton_13 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_13.setGeometry(QtCore.QRect(10, 280, 51, 23))
        self.pushButton_13.setObjectName("pushButton_13")
        self.pushButton_13.clicked.connect(self.press_btn)

        self.pushButton_14 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_14.setGeometry(QtCore.QRect(420, 30, 91, 23))
        self.pushButton_14.setObjectName("pushButton_14")
        self.pushButton_14.clicked.connect(self.press_btn)

        self.pushButton_15 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_15.setGeometry(QtCore.QRect(420, 70, 91, 23))
        self.pushButton_15.setObjectName("pushButton_15")
        self.pushButton_15.clicked.connect(self.press_btn)

        self.pushButton_16 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_16.setGeometry(QtCore.QRect(420, 110, 91, 23))
        self.pushButton_16.setObjectName("pushButton_16")
        self.pushButton_16.clicked.connect(self.press_btn)

        #self.textEdit = QtWidgets.QTextEdit(self.centralwidget)
        #self.textEdit.setGeometry(QtCore.QRect(420, 220, 104, 161))
        #self.textEdit.setObjectName("textEdit")

        import main
        import sql_req
        list_birthday = sql_req.check_birthday(main.conn)
        L = []
        if len(list_birthday) == 0:
            pass
        else:
            for i in range(len(list_birthday)):
                L.append(list_birthday[i]['Имя'])
                d = list_birthday[i]['Дата'].strftime('%d-%m-%Y')
                L.append(d)
                L.append('\n')
            myString = ' '.join(L)
            print(myString)
            msg = QMessageBox()
            msg.setWindowTitle("Список именинников")
            msg.setText(myString)
            msg.exec_()


        Ui_PhoneBook.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(Ui_PhoneBook)
        self.statusbar.setObjectName("statusbar")
        Ui_PhoneBook.setStatusBar(self.statusbar)
        self.menubar = QtWidgets.QMenuBar(Ui_PhoneBook)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 538, 21))
        self.menubar.setObjectName("menubar")
        Ui_PhoneBook.setMenuBar(self.menubar)

        self.retranslateUi(Ui_PhoneBook)
        QtCore.QMetaObject.connectSlotsByName(Ui_PhoneBook)

        self.pushButton.setText("АБ")
        self.pushButton_2.setText("ВГ")
        self.pushButton_3.setText("ДЕ")
        self.pushButton_4.setText("ЖЗИЙ")
        self.pushButton_5.setText("КЛ")
        self.pushButton_6.setText("МН")
        self.pushButton_7.setText("ОП")
        self.pushButton_8.setText("РС")
        self.pushButton_9.setText("ТУ")
        self.pushButton_10.setText("ФХ")
        self.pushButton_11.setText("ЦЧШЩ")
        self.pushButton_12.setText("ЪЫЬЭ")
        self.pushButton_13.setText("ЮЯ")
        self.pushButton_14.setText("Добавить")
        self.pushButton_15.setText("Редактировать")
        self.pushButton_16.setText("Удалить")

        self.tableWidget.setDisabled(True)






    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))

    def fill_table(self, req):
        self.tableWidget.setHorizontalHeaderLabels(['Имя', 'Телефон', 'Дата рождения'])
        for i in range(len(req)):
            name = req[i]['Имя']
            tel = str(req[i]['Телефон'])
            date = req[i]['Дата']
            date = date.strftime('%d %m %Y')
            m = int(date[3]+date[4])
            date = date[0] + date[1] + ' ' + str(mon[m]) + ' ' + date[-4] + date[-3] + date[-2] + date[-1]
            sp = [name, tel, date]
            for j in range(3):
                self.tableWidget.setItem(i, j, QTableWidgetItem(sp[j]))



    def press_btn(self):
        import sql_req
        import main
        sender = self.sender()

        if sender.objectName() == 'pushButton':
            self.tableWidget.clear()
            self.pushButton.setEnabled(False)
            req = sql_req.request_Abc(main.conn, sender.text())
            self.fill_table(req)
        else:
            self.pushButton.setEnabled(True)

        if sender.objectName() == 'pushButton_2':
            self.tableWidget.clear()
            self.pushButton_2.setEnabled(False)
            req = sql_req.request_Abc(main.conn, sender.text())
            self.fill_table(req)
        else:
            self.pushButton_2.setEnabled(True)

        if sender.objectName() == 'pushButton_3':
            self.tableWidget.clear()
            self.pushButton_3.setEnabled(False)
            req = sql_req.request_Abc(main.conn, sender.text())
            self.fill_table(req)
        else:
            self.pushButton_3.setEnabled(True)

        if sender.objectName() == 'pushButton_4':
            self.tableWidget.clear()
            self.pushButton_4.setEnabled(False)
            req = sql_req.request_Abc(main.conn, sender.text())
            self.fill_table(req)
        else:
            self.pushButton_4.setEnabled(True)

        if sender.objectName() == 'pushButton_5':
            self.tableWidget.clear()
            self.pushButton_5.setEnabled(False)
            req = sql_req.request_Abc(main.conn, sender.text())
            self.fill_table(req)
        else:
            self.pushButton_5.setEnabled(True)

        if sender.objectName() == 'pushButton_6':
            self.tableWidget.clear()
            self.pushButton_6.setEnabled(False)
            req = sql_req.request_Abc(main.conn, sender.text())
            self.fill_table(req)
        else:
            self.pushButton_6.setEnabled(True)

        if sender.objectName() == 'pushButton_7':
            self.tableWidget.clear()
            self.pushButton_7.setEnabled(False)
            req = sql_req.request_Abc(main.conn, sender.text())
            self.fill_table(req)
        else:
            self.pushButton_7.setEnabled(True)

        if sender.objectName() == 'pushButton_8':
            self.tableWidget.clear()
            self.pushButton_8.setEnabled(False)
            req = sql_req.request_Abc(main.conn, sender.text())
            self.fill_table(req)
        else:
            self.pushButton_8.setEnabled(True)

        if sender.objectName() == 'pushButton_9':
            self.tableWidget.clear()
            self.pushButton_9.setEnabled(False)
            req = sql_req.request_Abc(main.conn, sender.text())
            self.fill_table(req)
        else:
            self.pushButton_9.setEnabled(True)

        if sender.objectName() == 'pushButton_10':
            self.tableWidget.clear()
            self.pushButton_10.setEnabled(False)
            req = sql_req.request_Abc(main.conn, sender.text())
            self.fill_table(req)
        else:
            self.pushButton_10.setEnabled(True)

        if sender.objectName() == 'pushButton_11':
            self.tableWidget.clear()
            self.pushButton_11.setEnabled(False)
            req = sql_req.request_Abc(main.conn, sender.text())
            self.fill_table(req)
        else:
            self.pushButton_11.setEnabled(True)

        if sender.objectName() == 'pushButton_12':
            self.tableWidget.clear()
            self.pushButton_12.setEnabled(False)
            req = sql_req.request_Abc(main.conn, sender.text())
            self.fill_table(req)
        else:
            self.pushButton_12.setEnabled(True)

        if sender.objectName() == 'pushButton_13':
            self.tableWidget.clear()
            self.pushButton_13.setEnabled(False)
            req = sql_req.request_Abc(main.conn, sender.text())
            self.fill_table(req)
        else:
            self.pushButton_13.setEnabled(True)

        if sender.objectName() == 'pushButton_14':
            dialog = NewAbon(self)
            dialog.exec_()

        if sender.objectName() == 'pushButton_15':
            if sender.text() == 'Редактировать':
                self.tableWidget.setDisabled(False)
                self.pushButton_15.setText("Отменить")
                self.pushButton_14.setEnabled(False)
                self.pushButton_16.setEnabled(False)
            elif sender.text() == 'Отменить':
                self.tableWidget.setDisabled(True)
                self.pushButton_15.setText("Редактировать")
                self.pushButton_14.setEnabled(True)
                self.pushButton_16.setEnabled(True)
            #self.setupUi_redact(self)
        if sender.objectName() == 'pushButton_16':
            if sender.text() == 'Удалить':
                self.tableWidget.setDisabled(False)
                self.pushButton_16.setText("Отменить")
                self.pushButton_14.setEnabled(False)
                self.pushButton_15.setEnabled(False)
            elif sender.text() == 'Отменить':
                self.tableWidget.setDisabled(True)
                self.pushButton_16.setText("Удалить")
                self.pushButton_14.setEnabled(True)
                self.pushButton_15.setEnabled(True)



    def clicked_table(self):
        rows = sorted(set(index.row() for index in
                      self.tableWidget.selectedIndexes()))
        for row in rows:
            pass
            #print('Row %d is selected' % row)
        self.tableWidget.selectRow(row)
        global roww
        roww = self.get_column_data(row)
        if len(roww) == 0:
            pass
        else:
            if self.pushButton_15.text() == 'Отменить':
                dialog = Redact()
                dialog.exec_()
            if self.pushButton_16.text() == 'Отменить':
                msg = QMessageBox()
                msg.setWindowTitle(" ")
                msg.setText("Удалить контакт?.")
                msg.setIcon(QMessageBox.Warning)
                buttonAceptar = msg.addButton("Да", QMessageBox.YesRole)
                buttonCancelar = msg.addButton("Отменить", QMessageBox.RejectRole)
                msg.setDefaultButton(buttonAceptar)
                msg.exec_()
                if msg.clickedButton() == buttonAceptar:
                    import sql_req
                    import main
                    print(roww)
                    date = self.data_trns()
                    print(date)
                    id = sql_req.check_id(main.conn, roww[0], roww[1], date)
                    sql_req.delete(main.conn, id[0]['id'])


    def get_column_data(self, column):
        data = []
        for i in range(self.tableWidget.rowCount()):
            try:
                data.append(self.tableWidget.item(column, i).text())
            except:
                pass
        return data

    def data_trns(self):
        date = roww[2].split(' ')
        for i in range(len(mon)):
            if mon[i+1] == date[1]:
                date.pop(1)
                date.insert(1, str(i+1))
        d = date[0]
        m = date[1]
        y = date[2]
        if len(m) == 1:
            m = '0'+ m
        date = [d, m, y]
        date = '-'.join(date)
        return date







